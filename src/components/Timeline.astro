---
import "@/styles/components/timeline.css";
import { type TimelineProps } from "@/types";
import TimelineItem from "@/components/TimelineItem.astro";
import { getLangFromUrl, useTranslatedPath } from "@/utils/i18n";

const { timelineItems } = Astro.props as {
  timelineItems: TimelineProps[];
};

const lang = getLangFromUrl(Astro.url);
const translatePath = useTranslatedPath(lang);
---

<div class="timeline-container">
  {
    timelineItems.map((timeline) =>
      timeline.url ? (
        <a href={translatePath(timeline.url)} class="timeline-link">
          <TimelineItem
            title={timeline.title}
            subtitle={timeline.subtitle}
            description={timeline.description}
            points={timeline.points}
            url={timeline.url}
          />
        </a>
      ) : (
        <TimelineItem
          title={timeline.title}
          subtitle={timeline.subtitle}
          description={timeline.description}
          points={timeline.points}
          url={timeline.url}
        />
      ),
    )
  }
</div>

<script>
  const containerEl = document.querySelector(".timeline-container");
  if (containerEl) {
    containerEl.addEventListener("click", (e) => {
      const currentEl = e.target as HTMLDivElement;
      if (!currentEl) return;

      const itemEl = currentEl.closest(".timeline-item");
      if (!itemEl) return;

      const descriptionEl = itemEl.querySelector(".timeline-description");
      if (!descriptionEl) return;

      descriptionEl?.classList.toggle("visible");
    });
  }
</script>
