---
import { Image } from "astro:assets";
import profileImage from "../assets/images/profile.jpg";
import "../styles/components/navigation.css";
import { NAVIGATION_ITEMS as navItems } from "../data/navigation";
import GithubIcon from "../assets/svg/github.svg";
import LinkedInIcon from "../assets/svg/linkedin.svg";
import EmailIcon from "../assets/svg/email.svg";
import HamburgerIcon from "../assets/svg/hamburger.svg";
import MoonIcon from "../assets/svg/moon.svg";
import SunIcon from "../assets/svg/sun.svg";
import { isActive } from "../utils/navigation";

const currentPath = Astro.url.pathname;
---

<nav class="nav" role="navigation" aria-label="Main navigation">
  <div class="nav-container">
    <a href="/" class="nav-profile">
      <Image
        src={profileImage}
        alt="Profile picture of Yanuar Wanda"
        class="nav-profile-image"
        loading="lazy"
        width="64"
        height="64"
      />
    </a>

    <div class="nav-text">
      <h1 class="nav-title">Yanuar Wanda</h1>
      <h2 class="nav-subtitle">Web Developer</h2>
    </div>

    <div class="nav-media">
      <a
        href="https://github.com/YanuarWanda"
        target="_blank"
        rel="noopener noreferrer"
        class="button button-secondary"
        aria-label="Visit Yanuar Wanda's GitHub profile"
      >
        <GithubIcon />
      </a>
      <a
        href="https://www.linkedin.com/in/yanuar-wanda/"
        target="_blank"
        rel="noopener noreferrer"
        class="button button-secondary"
        aria-label="Visit Yanuar Wanda's LinkedIn profile"
      >
        <LinkedInIcon />
      </a>
      <a
        href="mailto:yanuar.wanda2@gmail.com"
        target="_blank"
        rel="noopener noreferrer"
        class="button button-secondary"
        aria-label="Send an email to Yanuar Wanda"
      >
        <EmailIcon />
      </a>
    </div>

    <div class="nav-theme-container">
      <button class="nav-theme-icon-container" aria-label="Toggle dark mode">
        <div class="nav-theme-switcher">
          <div class="sun-icon"><SunIcon /></div>
          <div class="moon-icon"><MoonIcon /></div>
        </div>
      </button>
    </div>

    <button
      class="nav-hamburger"
      aria-expanded="false"
      aria-label="Toggle navigation menu"
    >
      <HamburgerIcon />
    </button>
  </div>

  <ul role="list" class="nav-list">
    {
      navItems.map((item) => (
        <li role="listitem" class="nav-item">
          <a
            href={item.href}
            class={`nav-link ${isActive(item.href, currentPath) ? "active" : ""}`}
            aria-label={`Go to ${item.text} section`}
            aria-current={isActive(item.href, currentPath) ? "page" : undefined}
            target={item.toNewTab ? "_blank" : ""}
          >
            {item.text}
          </a>
        </li>
      ))
    }
  </ul>
</nav>

<script is:inline>
  const theme = (() => {
    const localStorageTheme = localStorage?.getItem("theme") ?? "";
    if (["dark", "light"].includes(localStorageTheme)) {
      return localStorageTheme;
    }
    if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
      return "dark";
    }
    return "light";
  })();

  if (theme === "light") {
    document.documentElement.classList.remove("dark");
    document.documentElement.classList.add("light");
  } else {
    document.documentElement.classList.remove("light");
    document.documentElement.classList.add("dark");
  }

  window.localStorage.setItem("theme", theme);
</script>

<script>
  // Hamburger
  const hamburgerButton = document.querySelector(".nav-hamburger");
  const navList = document.querySelector(".nav-list");
  const navLinks = navList?.querySelectorAll("a");
  const isMobile = window.innerWidth <= 577;

  if (isMobile) {
    navLinks?.forEach((link) => {
      link.setAttribute("tabindex", "-1");
    });
  }

  if (hamburgerButton && navList) {
    hamburgerButton.addEventListener("click", () => {
      navList.classList.toggle("nav-open");
      const isExpanded = navList.classList.contains("nav-open");
      hamburgerButton.setAttribute("aria-expanded", isExpanded.toString());
      navLinks?.forEach((link) => {
        link.setAttribute("tabindex", isExpanded ? "0" : "-1");
      });
    });
  }

  window.addEventListener("click", (event: MouseEvent) => {
    if (
      navList &&
      !hamburgerButton?.contains(event.target as Node) &&
      !navList?.contains(event.target as Node)
    ) {
      navList.classList.remove("nav-open");
      if (hamburgerButton) {
        hamburgerButton.setAttribute("aria-expanded", "false");
      }
    }
  });

  // Theme Switcher
  const handleToggleClick = () => {
    const element = document.documentElement;
    element.classList.toggle("dark");
    element.classList.toggle("light");

    const isDark = element.classList.contains("dark");
    localStorage.setItem("theme", isDark ? "dark" : "light");
  };

  document
    .querySelector(".nav-theme-icon-container")
    ?.addEventListener("click", handleToggleClick);
</script>
